lang en_US.UTF-8
keyboard us
timezone Etc/UTC --utc
zerombr
clearpart --all --initlabel
autopart --type=plain --fstype=xfs --nohome
text

network --bootproto=dhcp --device=link --activate --onboot=on --hostname={{ system.hostname }}

rootpw --iscrypted $6$yiMODUnnGBW66tO9$e1ksKjn9FqGAd59yGS3m7akMg8LJ6GD6E5nnsz4P0q5B/EXRPlSnv3A.iYKyYI0xSuryL1PRsAQx/cTekTUuc.
user --name=admin --group=wheel,user
sshkey --username=admin "{{ builder_pub_key }}"


## use local ostree
#ostreesetup --osname=rhel --url=file:///run/install/repo/ostree/repo --ref=rhel/9/x86_64/edge --nogpg
# use remote ostree
ostreesetup --nogpg --osname=rhel --remote=edge --url=http://{{ ansible_host }}/{{ builder_blueprint_name }}/repo/ --ref={{ builder_blueprint_ref }}

# reboot after installation is successfully completed
reboot --eject


############################################################################
################### GENERAL

%post  

# Include XDG_RUNTIME_DIR variable

XDG_RUNTIME_DIR=/run/user/$(grep admin /etc/passwd | awk -F : '{print $3}')
echo "export XDG_RUNTIME_DIR=$XDG_RUNTIME_DIR" >> /var/home/admin/.bashrc


# fix ownership of user local files and SELinux contexts
chown -R admin: /var/home/admin
restorecon -vFr /var/home/admin


# sudo configuration for admin user
cat << EOF > /etc/sudoers.d/admin
admin    ALL=(ALL) NOPASSWD: ALL
EOF
#
%end



############################################################################
################### GREENBOOT
##### Setup scripts here to check if device came up successfully

%post --log=/root/ks-post-greenboot.log

mkdir -p /etc/greenboot/check/required.d
cat > /etc/greenboot/check/required.d/01_check_git.sh <<EOF
#!/bin/bash

git --help

EOF

chmod +x /etc/greenboot/check/required.d/01_check_git.sh
%end



##########################################
#################### Greengrass setup
%post --log=/root/ks-post-greengrass.log

set -x

# create systemd user directories for rootless services, timers, and sockets
mkdir -p /var/home/admin/.config/systemd/user/default.target.wants
mkdir -p /var/home/admin/.config/systemd/user/sockets.target.wants
mkdir -p /var/home/admin/.config/systemd/user/timers.target.wants
mkdir -p /var/home/admin/.config/systemd/user/multi-user.target.wants

# Create the script to download and install greengrass
cat > /var/usrlocal/bin/pre-install-greengrass.sh << EOF
#!/bin/bash

FOLDER=/var/greengrass/v2/certificates
if [ -d "\$FOLDER" ]
then
    echo "already installed greengrass."
    exit
else 
    echo "Greengrass detected. Skipping installation" 
fi

mkdir -p /var/greengrass/v2/certificates

# Download and extract the greengrass client
curl -s https://d2s8p88vqu9w66.cloudfront.net/releases/greengrass-nucleus-latest.zip > /var/home/admin/greengrass-nucleus-latest.zip
unzip /var/home/admin/greengrass-nucleus-latest.zip -d GreengrassCore && rm /var/home/admin/greengrass-nucleus-latest.zip

# Install the greengrass service
sudo -E java -Droot="//var/greengrass/v2" -Dlog.store=FILE -jar ./GreengrassCore/lib/Greengrass.jar --init-config ./GreengrassCore/config.yaml --component-default-user ggc_user:ggc_group --setup-system-service true

EOF

chmod +x /var/usrlocal/bin/pre-install-greengrass.sh

# run script to install greengrass at startup 
cat << EOF > /etc/systemd/system/pre-install-greengrass.service 
[Service]
Type=oneshot
ExecStart=/bin/bash /var/usrlocal/bin/pre-install-greengrass.sh

[Install]
WantedBy=multi-user.target default.target
EOF

# fix ownership of user local files and SELinux contexts
chown -R admin: /var/home/admin
restorecon -vFr /var/home/admin

# enable the greengrass installation service
systemctl enable pre-install-greengrass.service


# enable linger so user services run whether user logged in or not
cat << EOF > /etc/systemd/system/enable-linger.service
[Service]
Type=oneshot
ExecStart=loginctl enable-linger admin

[Install]
WantedBy=multi-user.target default.target
EOF

systemctl enable enable-linger.service

%end


























